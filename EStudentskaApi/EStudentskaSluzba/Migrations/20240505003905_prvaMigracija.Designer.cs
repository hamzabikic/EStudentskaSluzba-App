// <auto-generated />
using System;
using EStudentskaSluzba.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EStudentskaSluzba.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20240505003905_prvaMigracija")]
    partial class prvaMigracija
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("EStudentskaSluzba.Data.Tabele.Drzava", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Drzave");
                });

            modelBuilder.Entity("EStudentskaSluzba.Data.Tabele.Korisnik", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("DatumDodavanja")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DatumRodjenja")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsReferent")
                        .HasColumnType("bit");

                    b.Property<string>("KorisnickoIme")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lozinka")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Obrisan")
                        .HasColumnType("bit");

                    b.Property<int>("OpstinaId")
                        .HasColumnType("int");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Slika")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("OpstinaId");

                    b.ToTable("Korisnici");
                });

            modelBuilder.Entity("EStudentskaSluzba.Data.Tabele.Ocjena", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("DatumPolaganja")
                        .HasColumnType("datetime2");

                    b.Property<string>("OpisnaOcjena")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Poeni")
                        .HasColumnType("real");

                    b.Property<int>("PredmetId")
                        .HasColumnType("int");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<int>("Vrijednost")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PredmetId");

                    b.HasIndex("StudentId");

                    b.ToTable("Ocjene");
                });

            modelBuilder.Entity("EStudentskaSluzba.Data.Tabele.Opstina", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("DrzavaId")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DrzavaId");

                    b.ToTable("Opstine");
                });

            modelBuilder.Entity("EStudentskaSluzba.Data.Tabele.Predmet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Ects")
                        .HasColumnType("int");

                    b.Property<int>("NastavnikId")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Semestar")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NastavnikId");

                    b.ToTable("Predmeti");
                });

            modelBuilder.Entity("EStudentskaSluzba.Data.Tabele.Prijava", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("DatumPrijave")
                        .HasColumnType("datetime2");

                    b.Property<string>("IpAdresa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("KorisnikId")
                        .HasColumnType("int");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("KorisnikId");

                    b.ToTable("Prijave");
                });

            modelBuilder.Entity("EStudentskaSluzba.Data.Tabele.Rata", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Datum")
                        .HasColumnType("datetime2");

                    b.Property<int>("Godina")
                        .HasColumnType("int");

                    b.Property<float>("Iznos")
                        .HasColumnType("real");

                    b.Property<bool>("Obnova")
                        .HasColumnType("bit");

                    b.Property<int>("RedniBroj")
                        .HasColumnType("int");

                    b.Property<int>("ReferentId")
                        .HasColumnType("int");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ReferentId");

                    b.HasIndex("StudentId");

                    b.ToTable("Rate");
                });

            modelBuilder.Entity("EStudentskaSluzba.Data.Tabele.Smjer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Opis")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Smjerovi");
                });

            modelBuilder.Entity("EStudentskaSluzba.Data.Tabele.Upis", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("DatumOvjere")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DatumUpisa")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Obnova")
                        .HasColumnType("bit");

                    b.Property<int>("ReferentId")
                        .HasColumnType("int");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<int>("UpisanaGodina")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ReferentId");

                    b.HasIndex("StudentId");

                    b.ToTable("Upisi");
                });

            modelBuilder.Entity("EStudentskaSluzba.Data.Tabele.Nastavnik", b =>
                {
                    b.HasBaseType("EStudentskaSluzba.Data.Tabele.Korisnik");

                    b.Property<DateTime>("DatumZaposlenja")
                        .HasColumnType("datetime2");

                    b.Property<string>("Zvanje")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("Nastavnici");
                });

            modelBuilder.Entity("EStudentskaSluzba.Data.Tabele.Student", b =>
                {
                    b.HasBaseType("EStudentskaSluzba.Data.Tabele.Korisnik");

                    b.Property<string>("BrojIndeksa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GodinaStudija")
                        .HasColumnType("int");

                    b.Property<int>("SmjerId")
                        .HasColumnType("int");

                    b.HasIndex("SmjerId");

                    b.ToTable("Studenti");
                });

            modelBuilder.Entity("EStudentskaSluzba.Data.Tabele.Korisnik", b =>
                {
                    b.HasOne("EStudentskaSluzba.Data.Tabele.Opstina", "Opstina")
                        .WithMany()
                        .HasForeignKey("OpstinaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Opstina");
                });

            modelBuilder.Entity("EStudentskaSluzba.Data.Tabele.Ocjena", b =>
                {
                    b.HasOne("EStudentskaSluzba.Data.Tabele.Predmet", "Predmet")
                        .WithMany()
                        .HasForeignKey("PredmetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EStudentskaSluzba.Data.Tabele.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Predmet");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("EStudentskaSluzba.Data.Tabele.Opstina", b =>
                {
                    b.HasOne("EStudentskaSluzba.Data.Tabele.Drzava", "Drzava")
                        .WithMany()
                        .HasForeignKey("DrzavaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Drzava");
                });

            modelBuilder.Entity("EStudentskaSluzba.Data.Tabele.Predmet", b =>
                {
                    b.HasOne("EStudentskaSluzba.Data.Tabele.Nastavnik", "Nastavnik")
                        .WithMany()
                        .HasForeignKey("NastavnikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Nastavnik");
                });

            modelBuilder.Entity("EStudentskaSluzba.Data.Tabele.Prijava", b =>
                {
                    b.HasOne("EStudentskaSluzba.Data.Tabele.Korisnik", "Korisnik")
                        .WithMany()
                        .HasForeignKey("KorisnikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Korisnik");
                });

            modelBuilder.Entity("EStudentskaSluzba.Data.Tabele.Rata", b =>
                {
                    b.HasOne("EStudentskaSluzba.Data.Tabele.Korisnik", "Referent")
                        .WithMany()
                        .HasForeignKey("ReferentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EStudentskaSluzba.Data.Tabele.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Referent");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("EStudentskaSluzba.Data.Tabele.Upis", b =>
                {
                    b.HasOne("EStudentskaSluzba.Data.Tabele.Korisnik", "Referent")
                        .WithMany()
                        .HasForeignKey("ReferentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EStudentskaSluzba.Data.Tabele.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Referent");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("EStudentskaSluzba.Data.Tabele.Nastavnik", b =>
                {
                    b.HasOne("EStudentskaSluzba.Data.Tabele.Korisnik", null)
                        .WithOne()
                        .HasForeignKey("EStudentskaSluzba.Data.Tabele.Nastavnik", "Id")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EStudentskaSluzba.Data.Tabele.Student", b =>
                {
                    b.HasOne("EStudentskaSluzba.Data.Tabele.Korisnik", null)
                        .WithOne()
                        .HasForeignKey("EStudentskaSluzba.Data.Tabele.Student", "Id")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("EStudentskaSluzba.Data.Tabele.Smjer", "Smjer")
                        .WithMany()
                        .HasForeignKey("SmjerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Smjer");
                });
#pragma warning restore 612, 618
        }
    }
}
